services:
  rabbitmq:
    image: rabbitmq:4-management
    profiles:
      - rabbitmq
      - all
    container_name: shm-rabbitmq
    hostname: shm-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./dockerdata/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s
  mongodb:
    image: mongo:6
    profiles:
      - mongodb
      - all
    container_name: shm-mongodb
    hostname: shm-mongodb
    ports:
      - 27017:27017
    volumes:
      - ./dockerdata/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_PASSWORD
  apigateway:
    build:
      dockerfile: ./ApiGateway/Dockerfile
    image: tycho-shm/apigateway
    profiles:
      - apigateway
      - all
    volumes:
      - ./ocelot.json:/app/ocelot.development.json
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      Clerk__Domain: $CLERK_DOMAIN
    container_name: shm-apigateway
    hostname: shm-apigateway
    ports:
      - 6001:8080
  taskservice:
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      dockerfile: ./TaskService/Dockerfile
      args:
        GITHUB_OWNER: $GITHUB_PACKAGES_ORGANIZATION
        GITHUB_USERNAME: $GITHUB_PACKAGES_USERNAME
        GITHUB_TOKEN: $GITHUB_PACKAGES_TOKEN
    image: tycho-shm/taskservice
    profiles:
      - services
      - all
    container_name: shm-taskservice
    hostname: shm-taskservice
    ports:
      - 6002:8080
    environment:
      RabbitMQ__Hostname: $RABBITMQ_HOSTNAME
      RabbitMQ__Username: $RABBITMQ_USERNAME
      RabbitMQ__Password: $RABBITMQ_PASSWORD
  notificationservice:
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      dockerfile: ./NotificationService/Dockerfile
      args:
        GITHUB_OWNER: $GITHUB_PACKAGES_ORGANIZATION
        GITHUB_USERNAME: $GITHUB_PACKAGES_USERNAME
        GITHUB_TOKEN: $GITHUB_PACKAGES_TOKEN
    image: tycho-shm/notificationservice
    profiles:
      - services
      - all
    container_name: shm-notificationservice
    hostname: shm-notificationservice
    ports:
      - 6003:8080
    environment:
      RabbitMQ__Hostname: $RABBITMQ_HOSTNAME
      RabbitMQ__Username: $RABBITMQ_USERNAME
      RabbitMQ__Password: $RABBITMQ_PASSWORD
  profileservice:
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      dockerfile: ./ProfileService/Dockerfile
      args:
        GITHUB_OWNER: $GITHUB_PACKAGES_ORGANIZATION
        GITHUB_USERNAME: $GITHUB_PACKAGES_USERNAME
        GITHUB_TOKEN: $GITHUB_PACKAGES_TOKEN
    image: tycho-shm/profileservice
    profiles:
      - services
      - all
    container_name: shm-profileservice
    hostname: shm-profileservice
    ports:
      - 6004:8080
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      RabbitMQ__Hostname: $RABBITMQ_HOSTNAME
      RabbitMQ__Username: $RABBITMQ_USERNAME
      RabbitMQ__Password: $RABBITMQ_PASSWORD
      ProfileServiceDb__ConnectionString: $PROFILESERVICEDB_CONNECTIONSTRING
      ProfileServiceDb__Database: $PROFILESERVICEDB_DATABASE
      ProfileServiceDb__HouseProfileCollection: $PROFILESERVICEDB_HOUSEPROFILECOLLECTION
      ProfileServiceDb__UserProfileCollection: $PROFILESERVICEDB_USERPROFILECOLLECTION
      Clerk__Domain: $CLERK_DOMAIN
  ngrok:
    profiles:
      - testing
      - ngrok
    image: ngrok/ngrok:latest
    command:
      - "http"
      - "http://apigateway:8080"
    environment:
      NGROK_AUTHTOKEN: $TEST_NGROK_AUTHTOKEN
    container_name: shm-ngrok
    hostname: shm-ngrok
    ports:
      - 4040:4040
  e2etesting:
    depends_on:
      - profileservice
      - mongodb
      - ngrok
    build:
      dockerfile: ./e2eTesting/Dockerfile
      args:
        GITHUB_OWNER: $GITHUB_PACKAGES_ORGANIZATION
        GITHUB_USERNAME: $GITHUB_PACKAGES_USERNAME
        GITHUB_TOKEN: $GITHUB_PACKAGES_TOKEN
    image: tycho-shm/e2etesting
    profiles:
      - testing
    container_name: shm-e2etesting
    hostname: shm-e2etesting
    volumes:
      - ./dockerdata/e2etesting/testresults:/app/e2eTesting/SHM.E2ETest/TestResults
    environment:
      ClerkApiSecret: $TEST_CLERKAPISECRET
      ApiGatewayUrl: $TEST_APIGATEWAYURL
      SvixAuthToken: $TEST_SVIXAUTHTOKEN
      SvixApiUrl: $TEST_SVIXAPIRUL
      NgrokEndpoint: $TEST_NGROKENDPOINT
      RunningStandalone: false